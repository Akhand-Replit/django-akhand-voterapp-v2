"""
Django settings for blossom_educare project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR is currently [Project Root]/backend/blossom_educare.
# We need to go up three levels to reach the top project directory (e.g., D:\dayta\django-app)
PROJECT_ROOT = Path(__file__).resolve().parent.parent.parent # **MODIFIED: Added an extra .parent**

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-jy4=9zww0@ybx^xy(+fvx@rdyth!ean7w*_c$(bip*(2fqh=3e')

# SECURITY WARNING: don't run with debug turned on in production!
# IMPORTANT: Set DEBUG to True for local development
DEBUG = os.environ.get('DEBUG', 'True').lower() == 'true'

# Allow requests from all local sources in debug mode
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'localhost,127.0.0.1,.replit.dev').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'records',
    'rest_framework',
    'rest_framework.authtoken', # Add this for token authentication
    'corsheaders',
    'django_filters',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blossom_educare.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # TEMPLATES DIRS points to the frontend folder at the project root
        'DIRS': [os.path.join(PROJECT_ROOT, 'frontend')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blossom_educare.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# --- MODIFIED: Restored PostgreSQL configuration as requested ---
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',          # Your PostgreSQL database name
        'USER': 'voterdata',          # Your PostgreSQL username
        'PASSWORD': 'AkhandFoundation_VoterData',  # Your PostgreSQL password
        'HOST': '69.62.124.103',             # Your DB host's IP address
        'PORT': '5450',                  # PostgreSQL port
    }
}
# ------------------------------------------------------------------

# Caching Configuration
# --- MODIFIED: Restored Redis configuration as requested ---
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        # Your Redis connection string
        "LOCATION": "redis://default:rSTgDqiD93Od0eRyOtuitCmGdLOhsvPB9HdbABHdFT7UXFD922KZgOZ1gvFtFV3n@69.62.124.103:8767/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# ----------------------------------------------------------


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles') # Use PROJECT_ROOT
STATICFILES_DIRS = [
    os.path.join(PROJECT_ROOT, 'frontend'), # Use PROJECT_ROOT to correctly point to /frontend
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS Configuration
CORS_ALLOW_ALL_ORIGINS = True # Good for initial setup

# Django REST Framework configuration

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [ # Add this section
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
        # --- NEW: Add pagination settings ---
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50 # You can adjust this number
}

# CSRF Trusted Origins for local development
CSRF_TRUSTED_ORIGINS = os.environ.get('CSRF_TRUSTED_ORIGINS', 'http://localhost,http://127.0.0.1').split(',')

# --- NOTE: Frontend API URL is set in frontend/js/api.js to http://127.0.0.1:8000/ ---
